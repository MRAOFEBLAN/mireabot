from aiogram import F, Router, types
from aiogram.types import Message, FSInputFile, CallbackQuery, InputMediaPhoto
from aiogram.filters import Command, CommandStart
from aiogram.utils.media_group import MediaGroupBuilder

import datetime

import app.keybords as kb
# import app.cardgame as cg
import database.requests as rq



async def card_buider(xcaption, srcid, message):
    album_builder = MediaGroupBuilder(
        caption=xcaption
    )
    album_builder.add(
        type = "photo",
        media = FSInputFile(f"{srcid}.jpg"),
        # caption="–ü–æ–¥–ø–∏—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –º–µ–¥–∏–∞"
    )
    await message.answer_media_group(
        # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å build()
        media = album_builder.build()
    )


router = Router()

@router.message(CommandStart())
async def firstmessage(message: Message):
    await rq.setuser(message.from_user.id)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}, —Ç—ã –ø–æ–ø–∞–ª –≤ –ú–ò–†–≠–ê –∫–∞—Ä—Ç–æ—á–∫–∏ –º–∏—Ä—ç–∞ –∫–∞—Ä—Ç—ã –º–∏—Ä–∞', reply_markup=kb.main)
    # await message.answer('7'*58)


@router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É')
async def newcardmessage(message: Message):
    a = await rq.mozno(message.from_user.id)
    
    if a[1] > 0:
        x = await rq.gamerandom(message.from_user.id) 
        await rq.update_user_time(message.from_user.id,datetime.datetime.now())
        await rq.update_user_extra(message.from_user.id,-1)
        #print(x)
        media = FSInputFile(f'{x[0][0]}.jpg')

        if x[-1]:
            await message.answer_photo(media, caption=f'–í–∞–º –≤—ã–ø–∞–ª –¥—É–±–ª–∏–∫–∞—Ç {x[0][3][:-2].lower()}–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏! üôà\n\n{x[0][1]}\n\n{x[0][2]}', reply_markup=kb.main)
        else:
            await message.answer_photo(media, caption=f'–í–∞–º –≤—ã–ø–∞–ª–∞ –Ω–æ–≤–∞—è {x[0][3].lower()} –∫–∞—Ä—Ç–æ—á–∫–∞! üòé\n\n{x[0][1]}\n\n{x[0][2]}', reply_markup=kb.main)
    
    elif ((datetime.datetime.now() - datetime.datetime.strptime(a[0], '%Y-%m-%d %H:%M:%S.%f')) > datetime.timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=3, hours=0, weeks=0)):
        x = await rq.gamerandom(message.from_user.id) 
        await rq.update_user_time(message.from_user.id,datetime.datetime.now())
        #print(x)
        media = FSInputFile(f'{x[0][0]}.jpg')
        
        if x[-1]:
            await message.answer_photo(media, caption=f'–í–∞–º –≤—ã–ø–∞–ª –¥—É–±–ª–∏–∫–∞—Ç {x[0][3][:-2].lower()}–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏! üôà\n\n{x[0][1]}\n\n{x[0][2]}', reply_markup=kb.main)
        else:
            await message.answer_photo(media, caption=f'–í–∞–º –≤—ã–ø–∞–ª–∞ –Ω–æ–≤–∞—è {x[0][3].lower()} –∫–∞—Ä—Ç–æ—á–∫–∞! üòé\n\n{x[0][1]}\n\n{x[0][2]}', reply_markup=kb.main)

    else:
        a = str(datetime.timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=3, hours=0, weeks=0) - (datetime.datetime.now() - datetime.datetime.strptime(a[0], '%Y-%m-%d %H:%M:%S.%f'))).split('.')[0].split(':')
        await message.answer(f'''C–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ –∫—Ä—É—Ç–∏—à—å!\nC–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —á–µ—Ä–µ–∑ {int(a[1])} - –º–∏–Ω—É—Ç, {int(a[2])} - —Å–µ–∫—Å—É–Ω–¥''', reply_markup=kb.main)
    
    

@router.message(F.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é')
async def collectionmessage(message):
    xx = str(await rq.get_collectnumb(message.from_user.id))
    x = ''
    if int(xx) > 0:
        x = await rq.get_collection(message.from_user.id)
        c = ''
        for i in range(len(xx)):
            if xx[i] == '1':
                c+=str(i+1)
        media = FSInputFile(f'{x[0][1]}.jpg')
        if len(x) == 1:
            await message.answer_photo(media, caption=x[0][0], reply_markup = await kb.get_callback_btns(btns={
                f'1/{len(x)}' : 'none',
                '‚è©(–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)' : f'nonk',
                }))
        else:
            await message.answer_photo(media, caption=x[0][0], reply_markup = await kb.get_callback_btns(btns={
                f'1/{len(x)}' : 'none',
                '‚è©' : f'page_{2}_{message.from_user.id}_{c}',
                }))
    else:
        media = FSInputFile('0.jpg')
        await message.answer_photo(media, caption='–í—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –µ—â–µ –Ω–∏ –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏\n\n–ù–∞–∂–º–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—Éüëá'
                , reply_markup = kb.main
                )
    del x
    del xx
    
@router.callback_query(F.data.startswith('none'))
async def afsfa(callback):
    await callback.answer('')


@router.callback_query(F.data.startswith('nonk'))
async def afsfa(callback):
    await callback.answer('–£ –í–ê–° 1 –ö–ê–†–¢–û–ß–ö–ê–ê–ê–ê–ê–ê–ê–ê! –ß–¢–û –í–´ –¢–ê–ú –•–û–¢–ò–¢–ï –ü–û–°–ú–û–¢–†–ï–¢–¨???!!')    
    
@router.callback_query(F.data.startswith('page_'))
async def couter(callback):
    s = int(callback.data.split('_')[1])
    usid = callback.data.split('_')[2]

    x = callback.data.split('_')[3]
    res = await rq.get_card(int(x[s-1]))

    media = FSInputFile(f'{res[0]}.jpg')
    
    #print(s, usid, x)
    await callback.message.edit_media(InputMediaPhoto(media = media))
    
    if s == 1:
        await callback.message.edit_caption(caption = f'{res[1]}', reply_markup = await kb.get_callback_btns(btns={
            # '‚è™ first' : f'page_{s-1}_{usid}_{x}',
            f'{s}/{len(x)}' : 'none',
            '‚è©' : f'page_{s+1}_{usid}_{x}',
            }))
    elif s == len(x):
        await callback.message.edit_caption(caption = f'{res[1]}', reply_markup = await kb.get_callback_btns(btns={
            '‚è™' : f'page_{s-1}_{usid}_{x}',
            f'{s}/{len(x)}' : 'none',
            # '‚è©' : f'page_{s+1}_{usid}_{x}',
            }))
    else:
        await callback.message.edit_caption(caption = f'{res[1]}', reply_markup = await kb.get_callback_btns(btns={
            '‚è™' : f'page_{s-1}_{usid}_{x}',
            f'{s}/{len(x)}' : 'none',
            '‚è©' : f'page_{s+1}_{usid}_{x}',
            }))

    



    
    
    
    

@router.message(F.text == '–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞')
async def aboutusmessage(message: Message):
    album_builder = MediaGroupBuilder(
        caption='@MRAOF, @LEWFAN, @Invincible_xXx, @danieltgrm'
    )
    album_builder.add(
        type = "photo",
        media = FSInputFile('b.jpg'),
        # caption="–ü–æ–¥–ø–∏—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –º–µ–¥–∏–∞"
    )
    album_builder.add(
        type = "photo",
        media = FSInputFile('a.jpg'),
        # caption="–ü–æ–¥–ø–∏—Å—å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –º–µ–¥–∏–∞"
    )
    await message.answer_media_group(
        # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–∑–≤–∞—Ç—å build()
        media = album_builder.build()
    )



@router.message(F.text == '–ö–æ–ª–µ–Ω–∫–∏')
async def kleimessage(message: Message):
    await message.reply('–ü—Ä–∏–¥—É—Ä–∫–∏')


@router.message(F.text == 'id')
async def da(message: Message):
    await message.reply(f'{message.from_user.id}')